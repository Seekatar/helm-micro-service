apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "test-service.fullname" . }}
  labels:
    {{- include "test-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "test-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "test-service.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- if .Values.elasticLog }}
        co.elastic.logs/json.keys_under_root: "true"
        co.elastic.logs/json.add_error_key: "true"
        co.elastic.logs/json.message_key: "log"
        {{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.volumes }}
      volumes:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- include "test-service.volumesJson" . }}
      {{- include "test-service.volumesHostPath" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{ include "test-service.serviceAccountName" . }}
      containers:
        - name: {{ include "test-service.fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}{{ .Values.image.repository | not | ternary "" "/" }}{{ required "A image.name is required!" .Values.image.name }}:{{ required "A image.tag is required!" .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- include "test-service.volumeMountsJson" . }}
          {{- include "test-service.volumeMountsHostPath" . }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "test-service.fullname" . }}
          {{- include "test-service.secret" . }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthChecks.liveness.url }}
              port: {{ .Values.healthChecks.port }}
            initialDelaySeconds: {{ .Values.healthChecks.liveness.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.healthChecks.liveness.timeoutSeconds }}
            periodSeconds: {{ .Values.healthChecks.liveness.periodSeconds}}
          readinessProbe:
            httpGet:
              path: {{ .Values.healthChecks.ready.url }}
              port: {{ .Values.healthChecks.port }}
            initialDelaySeconds: {{ .Values.healthChecks.ready.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.healthChecks.ready.timeoutSeconds }}
            periodSeconds: {{ .Values.healthChecks.ready.periodSeconds}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
